name: Python CI

on:
  push:
    branches: [main, develop, ci-testing-*]
    paths:
      - 'packages/backend/**'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/backend/**'
      - '.github/workflows/python-ci.yml'

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            packages/backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('packages/backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Run ruff check
        run: uv run ruff check src app

      - name: Run ruff format check
        run: uv run ruff format --check src app

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            packages/backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('packages/backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Run mypy
        run: uv run mypy src app --ignore-missing-imports

  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/backend

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    services:
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            packages/backend/.venv
          key: ${{ runner.os }}-py${{ matrix.python-version }}-uv-${{ hashFiles('packages/backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-py${{ matrix.python-version }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Run unit tests
        run: uv run pytest tests/unit -v --cov=src --cov=app --cov-report=xml --cov-report=term
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Run integration tests
        run: uv run pytest tests/integration -v
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.10'
        with:
          files: coverage.xml
          flags: backend
          name: backend-coverage

  test-plugin-system:
    name: Test Plugin System
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            packages/backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('packages/backend/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Run plugin system tests
        run: uv run python test_plugin_system.py
