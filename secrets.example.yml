# Docker Secrets Template
# For production deployments using Docker Swarm or Kubernetes
# 
# Usage:
# 1. Copy this file to secrets.yml
# 2. Replace placeholder values with actual secrets
# 3. DO NOT commit secrets.yml to version control
# 4. Use with docker secret create or Kubernetes secrets

# Database credentials
postgres_db: tradingagents
postgres_user: tradingagents
postgres_password: REPLACE_WITH_SECURE_PASSWORD

# Redis credentials
redis_password: REPLACE_WITH_SECURE_PASSWORD

# API Keys
openai_api_key: REPLACE_WITH_YOUR_OPENAI_KEY
alpha_vantage_api_key: REPLACE_WITH_YOUR_ALPHA_VANTAGE_KEY

# Optional: Additional API Keys
# anthropic_api_key: REPLACE_WITH_YOUR_ANTHROPIC_KEY
# google_api_key: REPLACE_WITH_YOUR_GOOGLE_KEY
# finnhub_api_key: REPLACE_WITH_YOUR_FINNHUB_KEY

# SMTP Credentials (for alerting)
# smtp_username: your_email@gmail.com
# smtp_password: your_app_password

# Webhook Secrets (for alerting)
# slack_webhook_url: https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# JWT Secret (for future authentication)
# jwt_secret_key: REPLACE_WITH_RANDOM_SECRET_KEY

# Encryption Keys (for future features)
# encryption_key: REPLACE_WITH_32_BYTE_KEY

# How to create Docker secrets:
# echo "your_password" | docker secret create postgres_password -
# echo "your_openai_key" | docker secret create openai_api_key -

# How to use in docker-compose.yml:
# services:
#   backend:
#     secrets:
#       - postgres_password
#       - openai_api_key
#     environment:
#       POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
#       OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
#
# secrets:
#   postgres_password:
#     external: true
#   openai_api_key:
#     external: true
