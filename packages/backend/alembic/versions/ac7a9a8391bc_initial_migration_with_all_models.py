"""Initial migration with all models

Revision ID: ac7a9a8391bc
Revises: 
Create Date: 2025-10-23 05:56:56.136501

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'ac7a9a8391bc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('agent_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('llm_provider', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('llm_model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('temperature', sa.Float(), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('config_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_configs_agent_type'), 'agent_configs', ['agent_type'], unique=False)
    op.create_index(op.f('ix_agent_configs_is_active'), 'agent_configs', ['is_active'], unique=False)
    op.create_index(op.f('ix_agent_configs_name'), 'agent_configs', ['name'], unique=True)
    op.create_table('portfolios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('initial_capital', sa.Float(), nullable=False),
    sa.Column('current_capital', sa.Float(), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolios_name'), 'portfolios', ['name'], unique=True)
    op.create_table('run_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('run_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('symbols', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('result_summary', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_trades', sa.Integer(), nullable=True),
    sa.Column('successful_trades', sa.Integer(), nullable=True),
    sa.Column('total_pnl', sa.Float(), nullable=True),
    sa.Column('agent_config_snapshot', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_run_logs_run_type'), 'run_logs', ['run_type'], unique=False)
    op.create_index(op.f('ix_run_logs_session_id'), 'run_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_run_logs_started_at'), 'run_logs', ['started_at'], unique=False)
    op.create_index(op.f('ix_run_logs_status'), 'run_logs', ['status'], unique=False)
    op.create_table('vendor_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('vendor_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('api_endpoint', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('api_key_ref', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('config_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rate_limit_per_minute', sa.Integer(), nullable=True),
    sa.Column('rate_limit_per_day', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vendor_configs_is_active'), 'vendor_configs', ['is_active'], unique=False)
    op.create_index(op.f('ix_vendor_configs_name'), 'vendor_configs', ['name'], unique=True)
    op.create_index(op.f('ix_vendor_configs_vendor_type'), 'vendor_configs', ['vendor_type'], unique=False)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('average_cost', sa.Float(), nullable=False),
    sa.Column('current_price', sa.Float(), nullable=False),
    sa.Column('unrealized_pnl', sa.Float(), nullable=False),
    sa.Column('realized_pnl', sa.Float(), nullable=False),
    sa.Column('position_type', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_portfolio_id'), 'positions', ['portfolio_id'], unique=False)
    op.create_index(op.f('ix_positions_symbol'), 'positions', ['symbol'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('order_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('limit_price', sa.Float(), nullable=True),
    sa.Column('stop_price', sa.Float(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('filled_quantity', sa.Float(), nullable=False),
    sa.Column('average_fill_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('filled_at', sa.DateTime(), nullable=True),
    sa.Column('decision_rationale', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trades_created_at'), 'trades', ['created_at'], unique=False)
    op.create_index(op.f('ix_trades_portfolio_id'), 'trades', ['portfolio_id'], unique=False)
    op.create_index(op.f('ix_trades_status'), 'trades', ['status'], unique=False)
    op.create_index(op.f('ix_trades_symbol'), 'trades', ['symbol'], unique=False)
    op.create_table('executions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trade_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('execution_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('commission', sa.Float(), nullable=False),
    sa.Column('fees', sa.Float(), nullable=False),
    sa.Column('exchange', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('execution_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.Column('metadata_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trades.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('execution_id')
    )
    op.create_index(op.f('ix_executions_executed_at'), 'executions', ['executed_at'], unique=False)
    op.create_index(op.f('ix_executions_symbol'), 'executions', ['symbol'], unique=False)
    op.create_index(op.f('ix_executions_trade_id'), 'executions', ['trade_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_executions_trade_id'), table_name='executions')
    op.drop_index(op.f('ix_executions_symbol'), table_name='executions')
    op.drop_index(op.f('ix_executions_executed_at'), table_name='executions')
    op.drop_table('executions')
    op.drop_index(op.f('ix_trades_symbol'), table_name='trades')
    op.drop_index(op.f('ix_trades_status'), table_name='trades')
    op.drop_index(op.f('ix_trades_portfolio_id'), table_name='trades')
    op.drop_index(op.f('ix_trades_created_at'), table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_positions_symbol'), table_name='positions')
    op.drop_index(op.f('ix_positions_portfolio_id'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_vendor_configs_vendor_type'), table_name='vendor_configs')
    op.drop_index(op.f('ix_vendor_configs_name'), table_name='vendor_configs')
    op.drop_index(op.f('ix_vendor_configs_is_active'), table_name='vendor_configs')
    op.drop_table('vendor_configs')
    op.drop_index(op.f('ix_run_logs_status'), table_name='run_logs')
    op.drop_index(op.f('ix_run_logs_started_at'), table_name='run_logs')
    op.drop_index(op.f('ix_run_logs_session_id'), table_name='run_logs')
    op.drop_index(op.f('ix_run_logs_run_type'), table_name='run_logs')
    op.drop_table('run_logs')
    op.drop_index(op.f('ix_portfolios_name'), table_name='portfolios')
    op.drop_table('portfolios')
    op.drop_index(op.f('ix_agent_configs_name'), table_name='agent_configs')
    op.drop_index(op.f('ix_agent_configs_is_active'), table_name='agent_configs')
    op.drop_index(op.f('ix_agent_configs_agent_type'), table_name='agent_configs')
    op.drop_table('agent_configs')
    # ### end Alembic commands ###
