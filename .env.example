ALPHA_VANTAGE_API_KEY=alpha_vantage_api_key_placeholder

# LLM Provider API Keys
OPENAI_API_KEY=openai_api_key_placeholder
DEEPSEEK_API_KEY=deepseek_api_key_placeholder
GROK_API_KEY=grok_api_key_placeholder
ANTHROPIC_API_KEY=anthropic_api_key_placeholder

# Encryption key for sensitive data (generate with: openssl rand -base64 32)
ENCRYPTION_KEY=your_encryption_key_here

# ===== TradingAgents Configuration =====
# LLM Configuration
TRADINGAGENTS_LLM_PROVIDER=openai
TRADINGAGENTS_DEEP_THINK_LLM=o4-mini
TRADINGAGENTS_QUICK_THINK_LLM=gpt-4o-mini
TRADINGAGENTS_BACKEND_URL=https://api.openai.com/v1

# Path Configuration
TRADINGAGENTS_PROJECT_DIR=.
TRADINGAGENTS_RESULTS_DIR=./results
TRADINGAGENTS_DATA_DIR=./data
TRADINGAGENTS_DATA_CACHE_DIR=./data_cache

# Debate and Discussion Settings
TRADINGAGENTS_MAX_DEBATE_ROUNDS=1
TRADINGAGENTS_MAX_RISK_DISCUSS_ROUNDS=1
TRADINGAGENTS_MAX_RECUR_LIMIT=100

# Data Vendor Configuration
# Options: yfinance, alpha_vantage, local, google, openai
VENDOR_CORE_STOCK_APIS=yfinance
VENDOR_TECHNICAL_INDICATORS=yfinance
VENDOR_FUNDAMENTAL_DATA=alpha_vantage
VENDOR_NEWS_DATA=alpha_vantage

# Database configuration
# SQLite (default)
DATABASE_URL=sqlite+aiosqlite:///./tradingagents.db
# PostgreSQL (example)
# DATABASE_URL=postgresql+asyncpg://user:password@localhost/tradingagents
DATABASE_ECHO=false

# Redis configuration (optional, required for streaming)
REDIS_ENABLED=false
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
# REDIS_PASSWORD=your_redis_password

# Streaming configuration
STREAMING_ENABLED=true
AUTO_START_WORKERS=false

# Monitoring configuration
MONITORING_ENABLED=true
METRICS_ENABLED=true

# Alerting configuration
ALERTING_ENABLED=false
ALERT_EMAIL_ENABLED=false
ALERT_EMAIL_TO=alerts@example.com
ALERT_EMAIL_FROM=tradingagents@example.com
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@gmail.com
SMTP_PASSWORD=your_app_password
SMTP_USE_TLS=true

ALERT_WEBHOOK_ENABLED=false
ALERT_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
# ALERT_WEBHOOK_HEADERS={"Authorization": "Bearer token"}

# Worker watchdog configuration
WATCHDOG_ENABLED=true
WATCHDOG_CHECK_INTERVAL=60
WATCHDOG_TASK_TIMEOUT=300

# Application settings
DEBUG=false

# Authentication settings
# Generate JWT secret with: openssl rand -hex 32
JWT_SECRET_KEY=change-this-secret-key-in-production-use-openssl-rand-hex-32
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Rate limiting settings
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_PER_HOUR=1000
